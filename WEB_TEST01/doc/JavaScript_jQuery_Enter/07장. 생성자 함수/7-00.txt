-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        function Student() {

        }
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        function Student() {

        }

        var student = new Student();
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        function Student(name, korean, math, english, science) {
            this.이름 = name;
            this.국어 = korean;
            this.수학 = math;
            this.영어 = english;
            this.과학 = science;
        }

        var student = new Student('윤하린', 96, 98, 92, 98);
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        function Student(name, korean, math, english, science) {
            // 속성
            this.이름 = name;
            this.국어 = korean;
            this.수학 = math;
            this.영어 = english;
            this.과학 = science;

            // 메서드
            this.getSum = function () {
                return this.국어 + this.수학 + this.영어 + this.과학;
            };
            this.getAverage = function () {
                return this.getSum() / 4;
            };
            this.toString = function () {
                return this.이름 + '\t' + this.getSum() + '\t' + this.getAverage();
            };
        }

        var student = new Student('윤하린', 96, 98, 92, 98);
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        function Student(name, korean, math, english, science) {
            // 속성
            this.이름 = name;
            this.국어 = korean;
            this.수학 = math;
            this.영어 = english;
            this.과학 = science;

            // 메서드
            this.getSum = function () {
                return this.국어 + this.수학 + this.영어 + this.과학;
            };
            this.getAverage = function () {
                return this.getSum() / 4;
            };
            this.toString = function () {
                return this.이름 + '\t' + this.getSum() + '\t' + this.getAverage();
            };
        }

        // 학생 정보 배열을 만듭니다.
        var students = [];
        students.push(new Student('윤인성', 87, 98, 88, 95));
        students.push(new Student('연하진', 92, 98, 96, 98));
        students.push(new Student('구지연', 76, 96, 94, 90));
        students.push(new Student('나선주', 98, 92, 96, 92));
        students.push(new Student('윤아린', 95, 98, 98, 98));
        students.push(new Student('윤명월', 64, 88, 92, 92));
        students.push(new Student('김미화', 82, 86, 98, 88));
        students.push(new Student('김연화', 88, 74, 78, 92));
        students.push(new Student('박아현', 97, 92, 88, 95));
        students.push(new Student('서준서', 45, 52, 72, 78));

        // 출력합니다.
        var output = '이름\t총점\t평균\n';
        for (var i in students) {
            output += students[i].toString() + '\n';
        }
        alert(output);

    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        // 생성자 함수를 선언합니다.
        function Student(name, korean, math, english, science) {
            this.이름 = name;
            this.국어 = korean;
            this.수학 = math;
            this.영어 = english;
            this.과학 = science;
        }

        // 인스턴스를 생성합니다.
        var student = new Student('윤하린', 96, 98, 92, 98);

        // 출력합니다.
        alert(student instanceof Student);
        alert(student instanceof Number);
        alert(student instanceof String);
        alert(student instanceof Boolean);
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        // 생성자 함수를 선언합니다.
        function Student(name, korean, math, english, science) {
            this.이름 = name;
            this.국어 = korean;
            this.수학 = math;
            this.영어 = english;
            this.과학 = science;
        }
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        // 생성자 함수를 선언합니다.
        function Student(name, korean, math, english, science) {
            this.이름 = name;
            this.국어 = korean;
            this.수학 = math;
            this.영어 = english;
            this.과학 = science;
        }
        Student.prototype.getSum = function () { };
        Student.prototype.getAverage = function () { };
        Student.prototype.toString = function () { };
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        // 생성자 함수를 선언합니다.
        function Constructor(value) {
            this.value = value;
        }

        // 변수를 선언합니다.
        var constructor = new Constructor('Hello');

        // 출력합니다.
        alert(constructor.value);
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        // 생성자 함수를 선언합니다.
        function Constructor(value) {
            this.value = value;
        }

        // 변수를 선언합니다.
        var constructor = Constructor('Hello');

        // 출력합니다.
        alert(value);
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        // 생성자 함수를 선언합니다.
        function Rectangle(width, height) {
            this.width = width;
            this.height = height;
        }
        Rectangle.prototype.getArea = function () {
            return this.width * this.height;
        };

        // 변수를 선언합니다.
        var rectangle = new Rectangle(5, 7);

        // 출력합니다.
        alert('AREA: ' + rectangle.getArea());
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        // 생성자 함수를 선언합니다.
        function Rectangle(width, height) {
            this.width = width;
            this.height = height;
        }
        Rectangle.prototype.getArea = function () {
            return this.width * this.height;
        };

        // 변수를 선언합니다.
        var rectangle = new Rectangle(5, 7);
        rectangle.width = -2;

        // 출력합니다.
        alert('AREA: ' + rectangle.getArea());
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        // 생성자 함수를 선언합니다.
        function Rectangle(w, h) {
            // 변수를 선언합니다.
            var width = w;
            var height = h;

            // 메서드를 선언합니다.
            this.getWidth = function () { return width; };
            this.getHeight = function () { return height; };
            this.setWidth = function (w) {
                width = w;
            };
            this.setHeight = function (h) {
                height = h;
            };
        }
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        // 생성자 함수를 선언합니다.
        function Rectangle(w, h) {
            // 변수를 선언합니다.
            var width = w;
            var height = h;

            // 메서드를 선언합니다.
            this.getWidth = function () { return w; };
            this.getHeight = function () { return h; };
            this.setWidth = function (w) {
                if (w < 0) {
                    throw '길이는 음수일 수 없습니다.';
                } else {
                    width = w;
                }
            };
            this.setHeight = function (h) {
                if (w < 0) {
                    throw '길이는 음수일 수 없습니다.';
                } else {
                    height = h;
                }
            };
        }
        Rectangle.prototype.getArea = function () {
            return this.getWidth() * this.getHeight();
        };

        // 변수를 선언합니다.
        var rectangle = new Rectangle(5, 7);
        rectangle.setWidth(-2);

        // 출력합니다.
        alert('AREA: ' + rectangle.getArea());
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        // 생성자 함수를 선언합니다.
        function Square(length) {
            this.width = length;
            this.height = length;
        }

        Square.prototype.getArea = function () {
            return this.getWidth() * this.getHeight();
        };
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        // 생성자 함수를 선언합니다.
        function Rectangle(w, h) {
            // 변수를 선언합니다.
            var width = w;
            var height = h;

            // 메서드를 선언합니다.
            this.getWidth = function () { return w; };
            this.getHeight = function () { return h; };
            this.setWidth = function (w) {
                if (w < 0) {
                    throw '길이는 음수일 수 없습니다.';
                } else {
                    width = w;
                }
            };

            this.setHeight = function (h) {
                if (w < 0) {
                    throw '길이는 음수일 수 없습니다.';
                } else {
                    height = h;
                }
            };
        }

        Rectangle.prototype.getArea = function () {
            return this.getWidth() * this.getHeight();
        };
    </script>
    <script>
        // 생성자 함수를 선언합니다.
        function Square(length) {
            this.base = Rectangle;
            this.base(length, length);
        }

        Square.prototype = Rectangle.prototype;
        Square.prototype.constructor = Square;
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        // 생성자 함수를 선언합니다.
        function Rectangle(w, h) {
            // 변수를 선언합니다.
            var width = w;
            var height = h;

            // 메서드를 선언합니다.
            this.getWidth = function () { return w; };
            this.getHeight = function () { return h; };
            this.setWidth = function (w) {
                if (w < 0) {
                    throw '길이는 음수일 수 없습니다.';
                } else {
                    width = w;
                }
            };

            this.setHeight = function (h) {
                if (w < 0) {
                    throw '길이는 음수일 수 없습니다.';
                } else {
                    height = h;
                }
            };
        }

        Rectangle.prototype.getArea = function () {
            return this.getWidth() * this.getHeight();
        };
    </script>
    <script>
        // 생성자 함수를선언 합니다.
        function Square(length) {
            this.base = Rectangle;
            this.base(length, length);
        }
        Square.prototype = Rectangle.prototype;
        Square.prototype.constructor = Square;

        // 변수를 선언합니다.
        var rectangle = new Rectangle(5, 7);
        var square = new Square(5);
        alert(rectangle.getArea() + ' : ' + square.getArea());
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <script>
        // 생성자 함수를 선언합니다.
        function Rectangle(w, h) {
            // 변수를 선언합니다.
            var width = w;
            var height = h;

            // 메서드를 선언합니다.
            this.getWidth = function () { return w; };
            this.getHeight = function () { return h; };
            this.setWidth = function (w) {
                if (w < 0) {
                    throw '길이는 음수일 수 없습니다.';
                } else {
                    width = w;
                }
            };

            this.setHeight = function (h) {
                if (w < 0) {
                    throw '길이는 음수일 수 없습니다.';
                } else {
                    height = h;
                }
            };
        }

        Rectangle.prototype.getArea = function () {
            return this.getWidth() * this.getHeight();
        };
    </script>
    <script>
        // 생성자 함수를선언 합니다.
        function Square(length) {
            this.base = Rectangle;
            this.base(length, length);
        }
        Square.prototype = Rectangle.prototype;
        Square.prototype.constructor = Square;

        // 변수를 선언합니다.
        var square = new Square(5);
        alert(square instanceof Rectangle);
    </script>
</head>
<body>

</body>
</html>
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
