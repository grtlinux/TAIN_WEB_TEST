#
# Let break it down :
#
#     %d{yyyy-MM-dd HH:mm:ss} = Date and time format, refer to SimpleDateFormat JavaDoc.
#     %-5p = The logging priority, like DEBUG or ERROR. The -5 is optional, for the pretty print format.
#        public final static int OFF_INT = Integer.MAX_VALUE;
#        public final static int FATAL_INT = 50000;
#        public final static int ERROR_INT = 40000;
#        public final static int WARN_INT  = 30000;
#        public final static int INFO_INT  = 20000;
#        public final static int DEBUG_INT = 10000;
#        //public final static int FINE_INT = DEBUG_INT;
#        public final static int ALL_INT = Integer.MIN_VALUE;
#     DEBUG > INFO > WARN > ERROR > FATAL
#
#     %c{1} = The logging name we set via getLogger(), refer to log4j PatternLayout guide.
#     %L = The line number from where the logging request.
#     %m%n = The message to log and line break.
#
#      %p : log type ( DEBUG, INFO.....)
#      %m : log message
#      %n : new line character
#      %d : print date format
#      %C : class name, case sensitive
#      %M : method name
#      %F : file name
#      %L : code line number in file
#      %l : package.class.method(file:line)
#
# Log message examples :
# 
#   2014-07-02 20:52:39 DEBUG className:200 - This is debug message
#   2014-07-02 20:52:39 DEBUG className:201 - This is debug message2
#

#--------------------------------------------
# Root logger option
#log4j.rootLogger=DEBUG, stdout, file
log4j.rootLogger=DEBUG, stdout

#log4j.logger.user=DEBUG, user
# Logger user_logger = Logger.getLogger("user");
# user_logger.error("Hello world!!! (Message)");

# SqlMap logging configuration
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
log4j.logger.java.sql.ResultSet=DEBUG
log4j.additivity.java.sql.Connection=false

# Redirect log messages to console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
#log4j.appender.stdout.Append=false
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %l - %m%n
log4j.appender.stdout.layout.ConversionPattern=[%d] %-5p %l - %m%n
log4j.appender.stdout.layout.ConversionPattern=%-5p ({%t} %F[%M]:%L) [%d] - %m%n
log4j.appender.stdout.layout.ConversionPattern=[%d] - %-5p - %t - %c - (%F:%M:%L) - %l - %m%n
log4j.appender.stdout.layout.ConversionPattern=[%d] (%F:%M:%L) - %m%n
log4j.appender.stdout.layout.ConversionPattern=[%d] %-5p %l - %m%n

# Redirect log messages to a log file
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=D:/log4j-file.log
log4j.appender.file.encoding=EUC-KR
log4j.appender.file.MaxFileSize=5MB
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %l - %m%n
log4j.appender.file.layout.ConversionPattern=[%d] %-5p %l - %m%n
log4j.appender.file.layout.ConversionPattern=%-5p ({%t} %F[%M]:%L) [%d] - %m%n
log4j.appender.file.layout.ConversionPattern=[%d] - %-5p - %t - %c - (%F:%M:%L) - %l - %m%n
log4j.appender.file.layout.ConversionPattern=[%d] %-5p %l - %m%n

#--------------------------------------------
# Root logger option
#log4j.rootLogger=WARN, user

# user
log4j.appender.user=org.apache.log4j.DailyRollingFileAppender
log4j.appender.user.Threshold=ERROR
log4j.appender.user.File=D:/log4j-user.log
log4j.appender.user.encoding=EUC-KR
log4j.appender.user.Append=true
log4j.appender.user.DatePattern='.'yyyy-MM-dd
#log4j.appender.user.DatePattern='.'yyyy-MM-dd'.log'
log4j.appender.user.layout=org.apache.log4j.PatternLayout
log4j.appender.user.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
log4j.appender.user.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %l - %m%n
log4j.appender.user.layout.ConversionPattern=[%d] %-5p %l - %m%n
log4j.appender.user.layout.ConversionPattern=%-5p ({%t} %F[%M]:%L) [%d] - %m%n
log4j.appender.user.layout.ConversionPattern=[%d] - %-5p - %t - %c - (%F:%M:%L) - %l - %m%n
log4j.appender.user.layout.ConversionPattern=[%d] %-5p %l - %m%n

#--------------------------------------------
# Root logger option
#log4j.rootLogger=DEBUG, db

log4j.appender.db=org.apache.log4j.jdbc.JDBCAppender
log4j.appender.db.Threshold=DEBUG
log4j.appender.db.URL=jdbc:mysql://localhost/LOG4JDemo
log4j.appender.db.user=default
log4j.appender.db.password=default
log4j.appender.db.sql=INSERT INTO JDBCTEST ( message ) VALUES ('%d - %c - %p - %m')




